import sys
import random
import math

datafile = sys.argv[1]

f = open(datafile, 'r')
data = []
l = f.readline()

# Read Data
while (l != ''):
    a = l.split()
    l2 = []
    for j in range(0, len(a), 1):
        l2.append(float(a[j]))
    l2.append(float(1))
    data.append(l2)
    l = f.readline()

rows = len(data)
cols = len(data[0])

f.close()


labelfile = sys.argv[2]
f = open(labelfile)
trainlabels = {}
n = [0, 0]
l = f.readline()
while (l != ''):
    a = l.split()
    trainlabels[a[1]] = int(a[0])
    if (trainlabels[a[1]] == 0):
        trainlabels[a[1]] = -1;
    l = f.readline()

    n[int(a[0])] += 1

f.close()

# Initialize w

w = []
for j in range(0, cols, 1):
    w.append(0.02 * random.random() - 0.01)

# Dot product
def dot_prod(a, b):
    dp = 0
    for i in range(0, cols, 1):
        dp += a[i] * b[i]
    return dp

# Gradient Descent

eta = 0.001
hloss = rows * 10
diff = 1
count = 0

while ((diff) > 0.001):
    dlf = [0] * cols
    for j in range(0, rows, 1):
        if (trainlabels.get(str(j)) != None):
            dp = dot_prod(w, data[j])
            condition = (trainlabels.get(str(j)) * (dot_prod(w, data[j])))
            for k in range(0, cols, 1):
                if (condition < 1):
                    dlf[k] += -1 * ((trainlabels.get(str(j))) * data[j][k])
                else:
                    dlf[k] += 0

	# Update w
	
    for j in range(0, cols, 1):
        w[j] = w[j] - eta * dlf[j]
    prev = hloss
    hloss = 0

	# Hingeloss
    for j in range(0, rows, 1):
        if (trainlabels.get(str(j)) != None):
            hloss += max(0, 1 - (trainlabels.get(str(j)) * dot_prod(w, data[j])))
        diff = abs(prev - hloss)

normw = 0
for i in range(0, (cols - 1), 1):
    normw += w[i] ** 2

normw = math.sqrt(normw)

d_orgin = abs(w[len(w) - 1] / normw)

print("w = " + str(w[0:2]))
print("w0 = " + str(w[2]))
print ("Distance to origin = " + str(d_orgin))

# Prediction

for i in range(0, rows, 1):
    if (trainlabels.get(str(i)) == None):
        dp = dot_prod(w, data[i])
        if (dp > 0):
            print("1 " + str(i))
        else:
            print("0 " + str(i))
